<!-- /snippets/collection-sorting.liquid -->
{% comment %}
Toggle between collection.liquid and collection.list.liquid with the
?view= parameter.
{% endcomment %}
<aside class="widget widget_size_option filter-tag">
  <h3 class="widget-title">{{section.settings.shop_by_size_title}}</h3>
  <select class="coll-filter">
    {{ 'collections.showby.show' | t }}  
    {{ paginate.current_offset | plus: 1 }} -
    {% if paginate.next %}
    {{ paginate.current_offset | plus: paginate.page_size }}
    {% else %}
    {{ paginate.items }} 
    {% endif %}
    {{ 'collections.showby.of' | t }} 
    {{ paginate.items }} 
    {{ 'collections.showby.results' | t }}
  </select>
  <form action="#" method="get" class="order-by">
    <select  name="SortBy" id="SortBy" class="orderby" >
      <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
      <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
      <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
      <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
      <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
      <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
      <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
      <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
    </select>
  </form>
</aside>

<script>
  /*============================================================================
    Inline JS because collection liquid object is only available
    on collection pages and not external JS files
  ==============================================================================*/
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }

  $(function() {
    $('#SortBy')
    .val('{{ collection.sort_by | default: collection.default_sort_by }}')
         .bind('change', function() {
      Shopify.queryParams.sort_by = jQuery(this).val();
      location.search = jQuery.param(Shopify.queryParams);
    }
    );
    $('#showby')
    .val('{{ collection.limit | default: settings.nb_per_page }}')
         .bind('change', function() {
      Shopify.queryParams.view = jQuery(this).val();
      location.search = jQuery.param(Shopify.queryParams);
    }
    );
  });
</script>
